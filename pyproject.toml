[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61", "setuptools_scm[toml]>=7"]

[project]
name = "opymizator"
description = "Opymizator is a tool to know what hyperparameter you should be using next to optimize your machine learning models."
readme = "README.rst"
keywords = [
    "ai",
    "hyperparameter",
    "search",
    "machine-learning",
    "optimization",
    "optuna"
]
license = {text = "MIT"}
authors = [{name = "Alex", email = "alexandre.kempf@cri-paris.org"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Development Status :: 3 - Alpha"
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
  "optuna>=3.0",
  "pyyaml>=6.0"
]

[project.scripts]
dvc = "opymizator.cli:cli"

[project.urls]
Issues = "https://github.com/AlexandreKempf/opymizator/issues"
Source = "https://github.com/AlexandreKempf/opymizator"

[project.optional-dependencies]
tests = [
  "pytest==8.1.1",
  "pytest-sugar==1.0.0",
  "pytest-cov==3.0.0",
  "pytest-mock==3.8.2",
  "mypy==0.971"
]
dev = [
  "opymizator[tests]",
]

[tool.setuptools_scm]

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*"]
where = ["src"]
namespaces = false

[tool.pytest.ini_options]
addopts = "-ra"

[tool.coverage.run]
branch = true
source = ["opymizator", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "raise AssertionError",
  "@overload"
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = false
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
files = ["src", "tests"]

[tool.codespell]
ignore-words-list = " "

[tool.ruff]
ignore = [
  "S101",  # assert
  "PLR2004",  # magic-value-comparison
  "PLW2901",  # redefined-loop-name
  "ISC001",  # single-line-implicit-string-concatenation
  "SIM105",  # suppressible-exception
  "SIM108",  # if-else-block-instead-of-if-exp
  "D203",  # one blank line before class
  "D213"  # multi-line-summary-second-line
]
select = ["ALL"]
show-source = true
show-fixes = true

[tool.ruff.per-file-ignores]
"noxfile.py" = ["D", "PTH"]
"tests/**" = ["S", "ARG001", "ARG002", "ANN"]
"docs/**" = ["INP"]

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
known-first-party = ["opymizator"]
